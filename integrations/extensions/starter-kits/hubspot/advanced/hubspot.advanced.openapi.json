{
  "openapi": "3.0.3",
  "info": {
    "title": "Hubspot Ticketing Advanced",
    "version": "2.0"
  },
  "servers": [
    {
      "url": "https://api.hubapi.com",
      "description": "Your hubspot support server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/crm/v3/objects/contacts/{contactId}": {
      "get": {
        "summary": "Get Contact by ID",
        "description": "Get contact information by ID",
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Numeric ID of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/crm/v3/objects/tickets": {
      "post": {
        "summary": "Create Ticket",
        "description": "Create a ticket for disputes",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketsInput"
              },
              "example": {
                "request": {
                  "subject": "Gandalf's First Angry Ticket",
                  "charge_amount": "100",
                  "charge_name": "fakeretail.com",
                  "charge_date": "2020-05-08",
                  "hs_pipeline_stage": "1"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePublicObject"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Tickets",
        "description": "Read a page of tickets. Control what is returned via the `properties` query param.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to display per page.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 3
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponseSimplePublicObjectForwardPaging"
                }
              }
            }
          }
        }
      }
    },
    "/crm/v3/objects/tickets/{ticketId}": {
      "get": {
        "summary": "Get Ticket Info",
        "description": "Read an Object identified by `{ticketId}`. `{ticketId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
        "parameters": [
          {
            "name": "ticketId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimplePublicObject"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Archive Ticket",
        "description": "Move an Object identified by `{ticketId}` to the recycling bin.",
        "parameters": [
          {
            "name": "ticketId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ContactsResponse": {
        "type": "object",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ContactsResponseProperties"
          }
        }
      },
      "ContactsResponseProperties": {
        "type": "object",
        "properties": {
          "createdate": {
            "type": "string",
            "description": "Date contact was added"
          },
          "email": {
            "type": "string",
            "description": "User's email address"
          },
          "firstname": {
            "type": "string",
            "description": "User's first name"
          },
          "hs_object_id": {
            "type": "string",
            "description": "User's hubspot ID"
          },
          "lastname": {
            "type": "string",
            "description": "User's last name"
          },
          "membership_status": {
            "type": "string",
            "description": "Custom property - the status of user's membership, bronze silver or gold"
          }
        }
      },
      "TicketsInput": {
        "type": "object",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/TicketsRequestObjectProperties"
          }
        }
      },
      "TicketsRequestObjectProperties": {
        "required": [
          "charge_amount",
          "charge_name",
          "charge_date",
          "subject",
          "hs_pipeline_stage"
        ],
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "example": "Gimley's Dispute Ticket"
          },
          "charge_name": {
            "type": "string",
            "example": "WalMart"
          },
          "charge_amount": {
            "type": "string",
            "example": "100"
          },
          "charge_date": {
            "type": "string",
            "example": "2020-05-08"
          },
          "hs_pipeline_stage": {
            "type": "string",
            "example": "1"
          }
        }
      },
      "SimplePublicObject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/ResponseCustomProperties"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "archived": {
            "type": "boolean"
          },
          "archivedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ResponseCustomProperties": {
        "type": "object",
        "properties": {
          "hs_pipeline_stage": {
            "type": "string",
            "description": "Pipeline status"
          },
          "hs_lastmodifieddate": {
            "type": "string",
            "description": "Update date"
          }
        }
      },
      "CollectionResponseSimplePublicObjectForwardPaging": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimplePublicObject"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/ForwardPaging"
          }
        }
      },
      "ForwardPaging": {
        "type": "object",
        "properties": {
          "next": {
            "$ref": "#/components/schemas/NextPage"
          }
        }
      },
      "NextPage": {
        "required": [
          "after"
        ],
        "type": "object",
        "properties": {
          "after": {
            "type": "string"
          },
          "link": {
            "type": "string"
          }
        },
        "example": {
          "after": "NTI1Cg%3D%3D",
          "link": "?after=NTI1Cg%3D%3D"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
